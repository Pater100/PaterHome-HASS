#   _                      
#  /_\__      ____ _ _   _ 
# //_\\ \ /\ / / _` | | | |
#/  _  \ V  V / (_| | |_| |
#\_/ \_/\_/\_/ \__,_|\__, |
#                    |___/ 
- alias: 'lichten_uit_bij_vertrek'
  hide_entity: true
  trigger:
    platform: state
    entity_id: binary_sensor.patrick_presence
    to: 'off'
  action:
    service: light.turn_off
    entity_id: group.all_lights

- alias: 'screen on when home'
  hide_entity: true
  trigger:
    platform: state
    entity_id: binary_sensor.patrick_presence
    to: 'on'
  action:
    service: switch.turn_on
    entity_id: switch.wallscreen

- alias: 'screen off when home'
  hide_entity: true
  trigger:
    platform: state
    entity_id: binary_sensor.patrick_presence
    to: 'off'
    for: '00:08:00'
  action:
    service: switch.turn_off
    entity_id: switch.wallscreen
  
#     __      _   _  __ _           _   _                 
#  /\ \ \___ | |_(_)/ _(_) ___ __ _| |_(_) ___  _ __  ___ 
# /  \/ / _ \| __| | |_| |/ __/ _` | __| |/ _ \| '_ \/ __|
#/ /\  / (_) | |_| |  _| | (_| (_| | |_| | (_) | | | \__ \
#\_\ \/ \___/ \__|_|_| |_|\___\__,_|\__|_|\___/|_| |_|___/
#                                                         
- alias: 'alarm_openen_achterdeur'
  hide_entity: true
  trigger:
    platform: state
    entity_id: binary_sensor.back_door
    from: 'off'
    to: 'on'
  condition:
    - condition: state
      entity_id: binary_sensor.patrick_presence
      state: 'off'
  action:
    service: notify.ios_pater100
    data:
      title: 'Indringer!'
      message: 'Iemand komt binnen via de achterdeur'
- alias: 'alarm_openen_Voordeur'
  hide_entity: true
  trigger:
    platform: state
    entity_id: binary_sensor.front_door
    from: 'off'
    to: 'on'
  condition:
    - condition: state
      entity_id: binary_sensor.patrick_presence
      state: 'off'
  action:
    service: notify.ios_pater100
    data:
      title: 'Indringer!'
      message: 'Iemand komt binnen via de voordeur'
- alias: 'alarm_openen_schuurdeur'
  hide_entity: true
  trigger:
    platform: state
    entity_id: binary_sensor.schuur_deur
    from: 'off'
    to: 'on'
  condition:
    - condition: state
      entity_id: binary_sensor.patrick_presence
      state: 'off'
  action:
    service: notify.ios_pater100
    data:
      title: 'Indringer!'
      message: 'Iemand komt binnen via de schuurdeur'
- alias: 'alarm_openen_schuurpoort'
  hide_entity: true
  trigger:
    platform: state
    entity_id: binary_sensor.schuur_poort
    from: 'off'
    to: 'on'
  condition:
    - condition: state
      entity_id: binary_sensor.patrick_presence
      state: 'off'
  action:
    service: notify.ios_pater100
    data:
      title: 'Indringer!'
      message: 'Iemand komt binnen via de schuurpoort'

#   __ _       _     _                   _                 
#  / /(_) __ _| |__ | |_   ___ _   _ ___| |_ ___ _ __ ___  
# / / | |/ _` | '_ \| __| / __| | | / __| __/ _ \ '_ ` _ \ 
#/ /__| | (_| | | | | |_  \__ \ |_| \__ \ ||  __/ | | | | |
#\____/_|\__, |_| |_|\__| |___/\__, |___/\__\___|_| |_| |_|
#        |___/                 |___/                       

#light System in Shed
- alias: "if shed door opens turn shed lights on"
  initial_state: true
  hide_entity: true
  trigger:
    - entity_id: binary_sensor.schuur_deur
      platform: state
      to: 'on'
  action:
    data:
      entity_id: switch.schuur
    service: switch.turn_on

- alias: door closed? turn off lights after 5 minutes
  initial_state: true
  hide_entity: true
  trigger: 
    - entity_id: binary_sensor.schuur_deur
      platform: state
      to: 'off'
      for:
        minutes: 2
  action:
    data:
      entity_id: switch.schuur
    service: switch.turn_off

- alias: "if shed backdoor opens turn on shed lights"
  initial_state: true
  hide_entity: true
  trigger:
    - entity_id: binary_sensor.schuur_poort
      platform: state
      to: 'on'
  action:
    data:
      entity_id: switch.schuur
    service: switch.turn_on

- alias: Poort closed? turn off lights after 5 minutes
  initial_state: true
  hide_entity: true
  trigger:
    - entity_id: binary_sensor.schuur_poort
      platform: state
      to: 'off'
      for:
        minutes: 2
  action:
    data:
      entity_id: switch.schuur
    service: switch.turn_off

- alias: if front door opens turn on lights, but only when its dark
  initial_state: true
  hide_entity: true
  trigger:
    entity_id: binary_sensor.frontdoor
    platform: state
    to: 'on'
  condition:
    condition: sun
    after: sunset
  action:
    data:
      entity_id: light.gang_group
    service: light.turn_on

- alias: if front door closes turn off lights
  initial_state: true
  hide_entity: true
  trigger:
    entity_id: binary_sensor.frontdoor
    platform: state
    to: 'off'
    for:
      minutes: 1
  action:
    data:
      entity_id: light.gang_group
    service: light.turn_off

- alias: if motion on stairs is detected turn off all light on upper floor
  initial_state: true
  hide_entity: true
  trigger:
    entity_id: binary_sensor.stairs
    platform: state
    to: "on"
  action:
    data:
      entity_id: light.boven_group
    service: light.turn_off

- alias: if door opens in the cellar
  initial_state: true
  hide_entity: true
  trigger:
    entity_id: binary_sensor.kelder
    platform: state
    to: "on"
  action:
    data:
      entity_id: light.kelder_2
    service: light.turn_on

- alias: if door opens in the cellar
  initial_state: true
  hide_entity: true
  trigger:
    entity_id: binary_sensor.kelder
    platform: state
    to: "off"
  action:
    data:
      entity_id: light.kelder_2
    service: light.turn_off
#   ___ _                                             _                 _   _             
#  / _ \ | __ _ _   _  __ _ _ __ ___  _   _ _ __   __| |  ___  ___  ___| |_(_) ___  _ __  
# / /_)/ |/ _` | | | |/ _` | '__/ _ \| | | | '_ \ / _` | / __|/ _ \/ __| __| |/ _ \| '_ \ 
#/ ___/| | (_| | |_| | (_| | | | (_) | |_| | | | | (_| | \__ \  __/ (__| |_| | (_) | | | |
#\/    |_|\__,_|\__, |\__, |_|  \___/ \__,_|_| |_|\__,_| |___/\___|\___|\__|_|\___/|_| |_|
#               |___/ |___/                                                               
- alias: 'Pressence_detected_Home'
  hide_entity: true
  trigger:
    platform: state
    entity_id: binary_sensor.patrick_presence
    to: 'on'
  action:
    service: notify.ios_pater100
    data:
      title: 'Patrick is Thuis!'
      message: 'De sensor is geschakeld naar thuis'
- alias: 'Pressence_detected_Away'
  hide_entity: true
  trigger:
    platform: state
    entity_id: binary_sensor.patrick_presence
    to: 'off'
  action:
    service: notify.ios_pater100
    data:
      title: 'Patrick is niet meer thuis!'
      message: 'De sensor is geschakeld naar Afwezig'

#              _ _   _                    _ _       
#  /\/\  _   _| | |_(_)_ __ ___   ___  __| (_) __ _ 
# /    \| | | | | __| | '_ ` _ \ / _ \/ _` | |/ _` |
#/ /\/\ \ |_| | | |_| | | | | | |  __/ (_| | | (_| |
#\/    \/\__,_|_|\__|_|_| |_| |_|\___|\__,_|_|\__,_|                                                   
- alias: 'Turn Homecinema Set on when TV is on'
  hide_entity: true
  initial_state: true
  trigger:
    - entity_id: media_player.samsung_tv_remote
      platform: state
      to: 'on'
  action:     
    data:
      entity_id: remote.livingroom_2
      command:
        - PowerToggle
      device: 46809977
    service: remote.send_command

- alias: 'turn Homecinema Set off when TV is off'
  initial_state: true
  hide_entity: true
  trigger:
    - entity_id: media_player.samsung_tv_remote
      platform: state
      to: 'off'
  action:     
    data:
      entity_id: remote.livingroom_2
      command:
        - PowerToggle
      device: 46809977
    service: remote.send_command

- alias: 'tv on after sunset, turn on ambiance scene'
  initial_state: true
  hide_entity: true
  trigger:
    - entity_id: media_player.samsung_tv_remote
      platform: state
      to: 'on'
  condition:
    condition: sun
    after: sunset
    after_offset: "-00:30:00"
  action:
    data:
      entity_id: scene.ambiance
    service: scene.turn_on

#                          _ _         
# ___  ___  ___ _   _ _ __(_) |_ _   _ 
#/ __|/ _ \/ __| | | | '__| | __| | | |
#\__ \  __/ (__| |_| | |  | | |_| |_| |
#|___/\___|\___|\__,_|_|  |_|\__|\__, |
#                                |___/ 
- alias: 'if frontdoor opens at night, turn lights on in bedroom'
  initial_state: true
  hide_entity: true
  trigger:
    - entity_id: binary_sensor.front_door
      platform: state
      to: 'on'
  condition:
    condition: and
    conditions:
    - condition: state
      entity_id: binary_sensor.patrick_presence
      state: 'on'
    - condition: time
      after: '23:00:00'
      before: '06:00:00'
  action:
    data:
      entity_id: scene.slaapkamer_lichten_100
    service: scene.turn_on
- alias: 'if backdoor opens at night, turn lights on in bedroom'
  initial_state: true
  hide_entity: true
  trigger:
    - entity_id: binary_sensor.back_door
      platform: state
      to: 'on'
  condition:
    condition: and
    conditions:
    - condition: state
      entity_id: binary_sensor.patrick_presence
      state: 'on'
    - condition: time
      after: '23:00:00'
      before: '06:00:00'
  action:
    data:
      entity_id: scene.slaapkamer_lichten_100
    service: scene.turn_on

#  __  __                  _               ____             _   _            
# |  \/  | ___  _ __ _ __ (_)_ __   __ _  |  _ \ ___  _   _| |_(_)_ __   ___ 
# | |\/| |/ _ \| '__| '_ \| | '_ \ / _` | | |_) / _ \| | | | __| | '_ \ / _ \
# | |  | | (_) | |  | | | | | | | | (_| | |  _ < (_) | |_| | |_| | | | |  __/
# |_|  |_|\___/|_|  |_| |_|_|_| |_|\__, | |_| \_\___/ \__,_|\__|_|_| |_|\___|
#                                  |___/                                     

- alias: "turn off sleep modus"
  initial_state: true
  hide_entity: true
  trigger:
    platform: time
    at: '05:00:00'
  action:
    data:
      entity_id: input_boolean.sleep_mode
    service: input_boolean.turn_off

- alias: "wake-up start of the routine"
  initial_state: true
  hide_entity: true
  trigger:
    platform: template
    value_template: "{{ states('sensor.time') == (states.input_datetime.wakeup_time.attributes.timestamp | int | timestamp_custom('%H:%M', False)) }}"
  condition:
    - condition: state
      entity_id: input_boolean.wakeup_enabled
      state: 'on'
    - condition: or
      conditions:
        - condition: time
          weekday:
            - mon
            - tue
            - wed
            - thu
            - fri
        - condition: state
          entity_id: input_boolean.wakeup_weekend
          state: 'on'
  action:
    data:
      entity_id: script.morning
    service: script.turn_on


#  _   _ _       _     _     ____             _   _            
# | \ | (_) __ _| |__ | |_  |  _ \ ___  _   _| |_(_)_ __   ___ 
# |  \| | |/ _` | '_ \| __| | |_) / _ \| | | | __| | '_ \ / _ \
# | |\  | | (_| | | | | |_  |  _ < (_) | |_| | |_| | | | |  __/
# |_| \_|_|\__, |_| |_|\__| |_| \_\___/ \__,_|\__|_|_| |_|\___|
#          |___/   
- alias: when night mode is on, set house to sleep mode
  initial_state: true
  hide_entity: true
  trigger: 
    platform: state
    entity_id: input_boolean.sleep_mode
    to: 'on'
  condition:
    condition: time
    after: '21:00:00'
    before: '05:00:00'
  action:
    data:
      entity_id: script.nightmode
    service: script.turn_on
